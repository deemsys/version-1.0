In this directory there are the various conversion scripts used to mainage K1 wrt to the kernel during conversion.
README - this file
artifacttransform - a transformation map from core to K1 artifacts - reference 
corekernelartifacts - artifacts in the core that are replaced by the kernel - reference
deletecoreprojects.sh - a script to delete the kernel artifacts from core svn
difftrunk.sh - a script to generate a set of patches tor bring K1 upto core 
kernelpoms - the poms in the kernel
masterpom.patch - a patch to apply to the master pom after transformation
pombuildpatch.patch - a patch to apply to all poms prior to transformation
pomscan.sh - a script to scan for poms
splitpatch.pl - a script to split and transform patches from core to kernel
transformArtifacts.xsl - an xslt to transform core poms into core poms that will work with K1

Process

get the lates set of core diffs from svn using difftrunk.sh, this will create a directory where the patches are stored.
apply the core patches with 

splitpatch.pl patchDIR

build and install the kernel with 

mvn clean install

Thats Kernel synchronized with core.

Next transform Core
svn udate on core
run the branchcoreproject.sh script to branch the old core
run the deletecoreprojects.sh script
perform the pombuildpatch
perform the transform
remove master/pom.xml
remove reference/library/pom.xml
svn update master/pom/xml
svn update reference/library/pom.xml
patch masterpom.patch

mvn clean install



TODO:

Some kernel artifacts are being deployed by non kernel core projects
Do we want Core performing the deployment or do we want a special core deployer for kernel (the latter I think)

We need to update .externals


